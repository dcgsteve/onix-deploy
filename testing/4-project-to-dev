{
  "name": "TCS1",
  "description": "Traffic Controller Service",
  "type": "U_APPLICATION",
  "txt": "global\n  chroot /var/lib/haproxy\n  user haproxy\n  group haproxy\n  maxconn 4000\n  pidfile /var/run/haproxy.pid\n  stats socket /var/lib/haproxy/stats\n\ndefaults\n  mode http\n  maxconn 3000\n  log global\n  option httplog\n  option redispatch\n  option dontlognull\n  option http-server-close\n  option forwardfor\n  timeout http-request 10s\n  timeout check 10s\n  timeout connect 10s\n  timeout client 1m\n  timeout queue 1m\n  timeout server 1m\n  timeout http-keep-alive 10s\n  retries 3\n\nfrontend stats\n  bind *:8404\n  stats enable\n option http-use-htx \n  http-request use-service prometheus-exporter if { path /metrics } \n  stats uri /\n  stats refresh 2s\n#  stats admin if LOCALHOST\n\nuserlist dataplaneapi\n  user admin insecure-password poctest\n\nprogram api\n  command /usr/bin/dataplaneapi --host 0.0.0.0 --port 5555 --haproxy-bin /usr/sbin/haproxy --config-file /etc/haproxy/haproxy.cfg --reload-cmd \"kill -SIGUSR2 1\" --reload-delay 5 --userlist dataplaneapi\n  no option start-on-reload\n\nfrontend main\n  bind *:80\n  acl project_a_endpoint src 192.168.15.0/24\n  acl customer_endpoint1 hdr_dom(host) -i webdev.poc\n  acl customer_endpoint2 hdr_dom(host) -i webprod.poc\n  option forwardfor header X-Real-IP\n  use_backend dev if project_a_endpoint customer_endpoint1\n  \nbackend dev\n  mode http\n  balance roundrobin\n  option httpchk HEAD /\n  server dev1 192.168.15.194:80 check rise 1 fall 1\n"
}
